using System;
using System.Windows.Forms;

namespace WinFormsApp1.Controls
{
    public partial class DynamicGridControl : UserControl
    {
        // Constructor
        public DynamicGridControl()
        {
            InitializeComponent();
            
            // Initial setup
            dataGridView1.AllowUserToAddRows = false;
            
            // Set up event handlers
            textBoxRows.TextChanged += (s, e) => UpdateGridSize();
            textBoxColumns.TextChanged += (s, e) => UpdateGridSize();
        }
        
        // Public properties for rows and columns
        public int Rows 
        {
            get => GetIntValue(textBoxRows.Text);
            set => textBoxRows.Text = value.ToString();
        }
        
        public int Columns
        {
            get => GetIntValue(textBoxColumns.Text);
            set => textBoxColumns.Text = value.ToString();
        }
        
        // Helper method to parse integer values safely
        private int GetIntValue(string text)
        {
            return int.TryParse(text, out int value) && value >= 0 ? value : 0;
        }
        
        // Update the grid based on current row and column values
        private void UpdateGridSize()
        {
            try
            {
                int rows = Rows;
                int cols = Columns;
                
                dataGridView1.Columns.Clear();
                dataGridView1.Rows.Clear();
                
                // Add columns
                for (int i = 0; i < cols; i++)
                    dataGridView1.Columns.Add($"col{i}", $"Column {i+1}");
                
                // Add rows
                for (int i = 0; i < rows; i++)
                    dataGridView1.Rows.Add();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error updating grid: {ex.Message}", "Error", 
                    MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
        
        // Expose the grid for external access if needed
        public DataGridView Grid => dataGridView1;
    }
}